name: Deploy to EC2

on:
  push:
    branches: [ prod ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to EC2
      run: |
        # Create deployment package
        tar -czf deploy.tar.gz dist/
        
        # Copy files to EC2
        scp -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} deploy.tar.gz ec2-user@${{ secrets.EC2_HOST }}:/tmp/
        
        # Execute deployment commands on EC2
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          # Extract files
          sudo tar -xzf /tmp/deploy.tar.gz -C /tmp/
          
          # Update nginx directory
          sudo rm -rf /var/www/html/*
          sudo cp -r /tmp/dist/* /var/www/html/
          
          # Set proper permissions
          sudo chown -R nginx:nginx /var/www/html/
          sudo chmod -R 755 /var/www/html/
          
          # Restart nginx
          sudo systemctl restart nginx
          
          # Clean up
          rm -f /tmp/deploy.tar.gz
          sudo rm -rf /tmp/dist
          
          echo "Deployment completed successfully!"
        EOF
        
    - name: Notify deployment status
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "🌐 Your app is available at: http://${{ secrets.EC2_HOST }}"
